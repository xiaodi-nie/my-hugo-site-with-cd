<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Course notes on Xanthia Nie</title>
    <link>http://jan23-website-hosting.s3-website-us-east-1.amazonaws.com/categories/course-notes/</link>
    <description>Recent content in Course notes on Xanthia Nie</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>niexiaodi.1970@gmail.com (Xanthia Nie)</managingEditor>
    <webMaster>niexiaodi.1970@gmail.com (Xanthia Nie)</webMaster>
    <lastBuildDate>Tue, 31 Mar 2020 23:32:58 +0000</lastBuildDate>
    
        <atom:link href="http://jan23-website-hosting.s3-website-us-east-1.amazonaws.com/categories/course-notes/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>Cloud Analysis Course Notes - Serverless Architecture</title>
        <link>http://jan23-website-hosting.s3-website-us-east-1.amazonaws.com/posts/hw9-lambda/</link>
        <pubDate>Tue, 31 Mar 2020 23:32:58 +0000</pubDate>
        <author>niexiaodi.1970@gmail.com (Xanthia Nie)</author>
        <guid>http://jan23-website-hosting.s3-website-us-east-1.amazonaws.com/posts/hw9-lambda/</guid>
        <description>What are the tradeoffs with a serverless architecture? There are many advantages of using a serverless architecture, and to name a few:
Lower operation cost: You don’t have to set up infrastructure and can pay for only what you use.
Less time to market: The serverless architecture style motivates to use existing or third party services. Because functions are small and have a clear responsibility the likelihood for reusing existing functions increases.</description>
      </item>
      
      <item>
        <title>Cloud Analysis Course Notes - Cloud Storage and Data Lakes</title>
        <link>http://jan23-website-hosting.s3-website-us-east-1.amazonaws.com/posts/hw8-datalake/</link>
        <pubDate>Tue, 10 Mar 2020 01:05:21 +0000</pubDate>
        <author>niexiaodi.1970@gmail.com (Xanthia Nie)</author>
        <guid>http://jan23-website-hosting.s3-website-us-east-1.amazonaws.com/posts/hw8-datalake/</guid>
        <description>What are the key differences between block and object storage? I found this comparison and found it very helpful:
    Block Storage Object Storage     Performance Performs best for big content and high stream throughput Strong performance with database and transactional data   Geography Data can be stored across multiple regions The greater the distance between storage and application, the higher the latency   Scalability Can scale infinitely to petabytes and beyond Addressing requirements limit scalability   Analytics Customizable metadata allows data to be easily organized and retrieved No metadata    Block storage means saving data in blocks, or raw storage volumes.</description>
      </item>
      
      <item>
        <title>Cloud Analysis course notes - Cloud Databases</title>
        <link>http://jan23-website-hosting.s3-website-us-east-1.amazonaws.com/posts/hw7-clouddb/</link>
        <pubDate>Wed, 04 Mar 2020 19:10:57 +0000</pubDate>
        <author>niexiaodi.1970@gmail.com (Xanthia Nie)</author>
        <guid>http://jan23-website-hosting.s3-website-us-east-1.amazonaws.com/posts/hw7-clouddb/</guid>
        <description>What are the problems with a “one size fits all” approach to relational databases? In the past, the reason why so many businesses model their data to try and fit the use cases of a relational database is that there is no other choice, so in reality many kinds of data are actually not suitable for relational model. Of course this is not to say relational databases cannot provide scalable, available and high performance service, it’s just that we now have many other database models to better suit different use cases.</description>
      </item>
      
      <item>
        <title>Cloud Analysis course discussion notes - Docker</title>
        <link>http://jan23-website-hosting.s3-website-us-east-1.amazonaws.com/posts/notes-on-docker/</link>
        <pubDate>Thu, 27 Feb 2020 20:22:43 +0000</pubDate>
        <author>niexiaodi.1970@gmail.com (Xanthia Nie)</author>
        <guid>http://jan23-website-hosting.s3-website-us-east-1.amazonaws.com/posts/notes-on-docker/</guid>
        <description>Docker&amp;rsquo;s two modes Interactive
usage example: run jupyter, add python2.7 to test
Background
usage example: run as server(running forever), website
Docker is basically a better version of virtualenv, where you have an seperate environment (and a set of package versions) for every container
Docker workflow example Here are the steps I did to containerize a simple flask app.
 Create Github repo Create ssh keys and upload to Github Git clone Create a local python virtual environment and source: python 3 -m venv ~/.</description>
      </item>
      
      <item>
        <title>Cloud Analysis course discussion note - ASICs</title>
        <link>http://jan23-website-hosting.s3-website-us-east-1.amazonaws.com/posts/hw6-asics/</link>
        <pubDate>Mon, 24 Feb 2020 21:25:08 +0000</pubDate>
        <author>niexiaodi.1970@gmail.com (Xanthia Nie)</author>
        <guid>http://jan23-website-hosting.s3-website-us-east-1.amazonaws.com/posts/hw6-asics/</guid>
        <description>How could ASICs play an important role in Machine Learning going forward? Machine learning tasks, including the training and the inference, usually cost a lot of computational resources and time. So there is a big need for a hardware acceleration. Hardware acceleration is when dedicated hardware, usually in the form of a GPU today, is used to speed up the computing processes present in an AI workflow. Accelerators have many optimisations that make them suitable for training and executing an AI model, and here are some of them:</description>
      </item>
      
      <item>
        <title>Cloud Analysis course notes - CAP Theorem and Amdahl&#39;s Law</title>
        <link>http://jan23-website-hosting.s3-website-us-east-1.amazonaws.com/posts/hw5-cap/</link>
        <pubDate>Thu, 20 Feb 2020 02:08:02 +0000</pubDate>
        <author>niexiaodi.1970@gmail.com (Xanthia Nie)</author>
        <guid>http://jan23-website-hosting.s3-website-us-east-1.amazonaws.com/posts/hw5-cap/</guid>
        <description>How does the CAP Theorem play a role in designing for the cloud? The CAP Theorem says that for a distributed system, you can only have 2 of the 3 things: Consistency, Availability and Partition Tolerance.
Consistency means that only have one copy of up-to-date data, and that all clients see the same data at the same time, no matter which node they connect to. For this to happen, whenever data is written to one node, it must be instantly forwarded or replicated to all the other nodes in the system before the write is deemed ‘successful.</description>
      </item>
      
      <item>
        <title>Cloud Analysis course notes - Containers</title>
        <link>http://jan23-website-hosting.s3-website-us-east-1.amazonaws.com/posts/hw4-containers/</link>
        <pubDate>Wed, 19 Feb 2020 23:36:27 +0000</pubDate>
        <author>niexiaodi.1970@gmail.com (Xanthia Nie)</author>
        <guid>http://jan23-website-hosting.s3-website-us-east-1.amazonaws.com/posts/hw4-containers/</guid>
        <description>What are containers? The concept of containers is similar to that of virtual machines. The differentiating factor is that VMs virtualize at the hardware level and containers virtualize at the operating system level. The containerization approach creates a more lightweight and flexible environment by allowing applications to share an operating system while maintaining their own executables, code, libraries, tools, and configuration files.
A container consists of an entire runtime environment: an application, plus all its dependencies, libraries and other binaries, and configuration files needed to run it, bundled into one package.</description>
      </item>
      
      <item>
        <title>Cloud Analysis course notes - AWS</title>
        <link>http://jan23-website-hosting.s3-website-us-east-1.amazonaws.com/posts/hw3-aws/</link>
        <pubDate>Wed, 19 Feb 2020 23:05:40 +0000</pubDate>
        <author>niexiaodi.1970@gmail.com (Xanthia Nie)</author>
        <guid>http://jan23-website-hosting.s3-website-us-east-1.amazonaws.com/posts/hw3-aws/</guid>
        <description>What are the different layers of network security on AWS and what unique problems do each solve? According to the AWS security white paper, AWS has the following layers of network security:
 Secure Network Architecture  There are network devices like firewalls at the edge of the aws network to closely monitor and guard the information flow in both ways. ACLs, or Access Control List are in place to manage the traffic flow.</description>
      </item>
      
      <item>
        <title>Cloud Analysis course note - IaC and cloud service model</title>
        <link>http://jan23-website-hosting.s3-website-us-east-1.amazonaws.com/posts/hw2-iac/</link>
        <pubDate>Wed, 19 Feb 2020 22:34:03 +0000</pubDate>
        <author>niexiaodi.1970@gmail.com (Xanthia Nie)</author>
        <guid>http://jan23-website-hosting.s3-website-us-east-1.amazonaws.com/posts/hw2-iac/</guid>
        <description>What is IAC and what problem does it solve? IAC stands for Infrastructure as Code. is a method to provision and manage IT infrastructure through the use of source code, rather than through standard operating procedures and manual processes.
You’re basically treating your servers, databases, networks, and other infrastructure like software. And this code can help you configure and deploy these infrastructure components quickly and consistently.
IaC helps you automate the infrastructure deployment process in a repeatable, consistent manner, which has many benefits.</description>
      </item>
      
      <item>
        <title>Kubernetes basics</title>
        <link>http://jan23-website-hosting.s3-website-us-east-1.amazonaws.com/posts/kubernetes/</link>
        <pubDate>Wed, 12 Feb 2020 00:51:51 +0000</pubDate>
        <author>niexiaodi.1970@gmail.com (Xanthia Nie)</author>
        <guid>http://jan23-website-hosting.s3-website-us-east-1.amazonaws.com/posts/kubernetes/</guid>
        <description>This is a course note and the majority of the meterials came from this qwiklab
Overview Google Kubernetes Engine (GKE) provides a managed environment for deploying, managing, and scaling your containerized applications using Google infrastructure. The Kubernetes Engine environment consists of multiple machines (specifically Google Compute Engine instances) grouped together to form a container cluster.
Kubernetes Engine clusters are powered by the Kubernetes open source cluster management system. Kubernetes provides the mechanisms through which you interact with your container cluster.</description>
      </item>
      
    
  </channel>
</rss>